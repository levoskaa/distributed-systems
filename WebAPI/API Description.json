swagger: "2.0"
info:
  description: "Elosztott Rendszerek Laboratórium WebAPI mérés API leírása."
  version: "1.0.0"
  title: "HEM REST Server API"
  contact:
    email: "janoky.laszlo@aut.bme.hu"
host: "localhost:58000"
basePath: "/api"
tags:
- name: "question-form"
  description: "QuestionForm related operations."
- name: "question-form-answer"
  description: "Anwer related operations (To be done individually)."

schemes:
- "http"
paths:
  /question-form:
    get:
      tags:
      - "question-form"
      summary: "Returns all QuestionForms"
      operationId: "GetQuestionForms"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QuestionFormAnswer"
    post:
      tags:
      - "question-form"
      summary: "Creates a new QuestionForm"
      operationId: "CreateNewQuestionForm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The QuestionForm to create"
        required: true
        schema:
          $ref: "#/definitions/QuestionForm"
      responses:
        201:
          description: "Question From succesfully created."
        409:
          description: "ID already taken"
  /question-form/{Id}:
    get:
      tags:
      - "question-form"
      summary: "Find a QuestionForm by its ID"
      operationId: "GetQuestionForm"
      produces:
      - "application/json"
      parameters:
      - name: "Id"
        in: "path"
        description: "ID of the QuestionForm to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QuestionForm"
        404:
          description: "QuestionForm not found"
    put:
      tags:
      - "question-form"
      summary: "Update an existing QuestionForm"
      operationId: "UpdateQuestionForm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Id"
        in: "path"
        description: "ID of the QuestionForm to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "The QuestionForm used to update the existing."
        required: true
        schema:
          $ref: "#/definitions/QuestionForm"
      responses:
        204:
          description: "The questionForm was updated succesfully."
        400:
          description: "The QuestionForm to update doens't exist."
    delete:
      tags:
      - "question-form"
      summary: "Deletes a QuestionForm"
      operationId: "DeleteQuestionForm"
      produces:
      - "application/json"
      parameters:
      - name: "Id"
        in: "path"
        description: "QuestionForm id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        204:
          description: "The questionForm was deleted (od didn't even exist)."
  /question-form-answer:
    get:
      tags:
      - "question-form-answer"
      summary: "Returns all QuestionForm Answers"
      operationId: "GetQuestionFormAnswers"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/QuestionFormAnswer"
    post:
      tags:
      - "question-form-answer"
      summary: "Creates a new QuestionForm Answer"
      operationId: "CreateNewQuestionFormAnswer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The QuestionFormAnswer to create"
        required: true
        schema:
          $ref: "#/definitions/QuestionFormAnswer"
      responses:
        201:
          description: "Question From Answer succesfully created."
        400:
          description: "Bad request, invalid questionFromId or questionId!"

definitions:
  Question:
    type: "object"
    required:
    - "questionType"
    - "questionText"
    properties:
      questionType:
        type: "string"
        description: "The type of the question"
        enum:
        - "FreeText"
        - "MultipleChoice"
        - "TrueOrFalse"
      questionText:
        type: "string"
        description: "What does the question ask."
      maxAnswerLength:
        type: "integer"
        description: "How long can the answer be."
      possibleAnswers:
        type: array
        items:
          type: string
  QuestionForm:
    type: "object"
    required:
    - "id"
    - "name"
    - "questions"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "Teszt kérdőív"
      questions:
        type: "array"
        items:
          $ref: "#/definitions/Question"
  Answer:
    type: "object"
    properties:
      questionId:
        type: "integer"
        format: "int64"
      answerText:
        type: "string"
        description: "What was the answer."
  QuestionFormAnswer:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      questionFormId:
        type: "integer"
        format: "int64"
      answers:
        type: "array"
        items:
          $ref: "#/definitions/Answer"